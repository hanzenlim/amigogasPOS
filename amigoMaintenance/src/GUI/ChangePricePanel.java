/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ChangePricePanel.java
 *
 * Created on Jun 12, 2012, 1:03:28 AM
 */
package GUI;

import MStore.InventoryData;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import mDB.DBConnection;

/**
 *
 * @author Hanzen
 */
public class ChangePricePanel extends javax.swing.JPanel {

    //init InventoryPanel
    public void initChangePricePanel(DBConnection db)
    {
        this.db = db;
    }
    
    //init JTable
    public void initJTableList()
    {
        
         String data[][] = null;
         String col[] = {"UPC", "Description", "Unit Price", "Stock"};
         model= new DefaultTableModel(data,col)
         {
            @Override
            public boolean isCellEditable(int row, int column) {
                //all cells false
                return false;
            }
        };
         
        this.jTable1.setModel(model);
        
     
    }
    //sets the column width for JTable
    public void setColJTable()
    {
        TableColumn column = null;
        for (int i = 0; i < 4; i++) {
            column = this.jTable1.getColumnModel().getColumn(i);
           if (i == 0) {
                column.setPreferredWidth(80); 
           }
           else if (i==1)
               column.setPreferredWidth(200);
           else if(i==2)
                column.setPreferredWidth(80);  
           else {
                column.setPreferredWidth(110);
            }
        }
    }
    //add row to JTable
    public void addDataJTableList(InventoryData inven)
    {
        
      this.model.insertRow(this.jTable1.getRowCount(),new Object[]{inven.getUPC(), inven.getDescription(), inven.getUnitPrice(), inven.getStock()});
   
      this.model.fireTableDataChanged();
      
      //scrolls the JTable at the bottom
      //source 
      //http://stackoverflow.com/questions/5956603/jtable-autoscrolling-to-bottom-problem
      //Rectangle rect = this.jTable1.getCellRect(this.jTable1.getRowCount(), 0, true);
      //Rectangle r2 = this.jTable1.getVisibleRect();
      
      //this.jTable1.scrollRectToVisible(new Rectangle(rect.x, rect.y, (int) r2.getWidth(), (int) r2.getHeight()));
      
    }
   
    
    //delete row to JTable
    public void removeDataJTableList(int row)
    {
        this.model.removeRow(row);
    }
    
    //populate JTable with data
    public void populateJTable()
    {
       this.initJTableList(); 
        
       ArrayList<InventoryData> inven = this.db.getInventoryData(); 
        
       if(inven != null)
       {
           Collections.sort(inven, new MyIntComparable());
       
           for(InventoryData i : inven)
           {
           
           this.prodMap.put(i.getUPC(), i);
           
           this.model.insertRow(this.jTable1.getRowCount(),  
                   new Object[]{i.getUPC(), i.getDescription(), i.getUnitPrice(), i.getStock()});
           }
       }
       
    }
    
    //returns the UPC number in JTable
    public int getSelectedItem()
    {
        if(this.jTable1.getSelectedRow() != -1)
        {
            //returns the UPC number
            int a=(Integer)this.jTable1.getValueAt(this.jTable1.getSelectedRow(), 0);
   
          return a;
        }
        double result[] ={-78, -78};
    return -78;
    }
    
    
    
    
    
    
    
    
    
    
    /** Creates new form ChangePricePanel */
    public ChangePricePanel() {
        initComponents();
        
        this.initJTableList();
        this.setColJTable();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        CloseButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        ChangePriceButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 255, 204));

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));

        CloseButton.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        CloseButton.setText("Close");
        CloseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseButtonActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 20)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 204, 255));
        jLabel2.setText("Change Unit Price");

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(CloseButton)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jLabel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 206, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(542, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(CloseButton)
                    .add(jLabel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 32, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jTable1.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        ChangePriceButton.setText("Change Price");
        ChangePriceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChangePriceButtonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap(28, Short.MAX_VALUE)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(ChangePriceButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 123, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 778, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(26, 26, 26))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 36, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(ChangePriceButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 36, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(11, 11, 11)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 517, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

private void CloseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseButtonActionPerformed
// TODO add your handling code here:
    this.setVisible(false);
}//GEN-LAST:event_CloseButtonActionPerformed

private void ChangePriceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChangePriceButtonActionPerformed
// TODO add your handling code here:
    int n =this.getSelectedItem();
    int ans;
    
    if(n==-78)
        JOptionPane.showMessageDialog(this, "Please select an item");
    else
    {
        //selected inventory data
        System.out.println("CHosen:" + n);
        InventoryData temp=this.prodMap.get(n);
        
        this.setPriceDialog.setLabel(temp.getDescription(), temp.getUnitPrice());
        ans = JOptionPane.showConfirmDialog(null, this.setPriceDialog, "Set Price", JOptionPane.PLAIN_MESSAGE);

        //if set price dialog is yes
        if(ans == JOptionPane.YES_OPTION)
        {
            int x=this.db.setUnitPrice(temp.getUPC(), temp.getUnitPrice(), Double.valueOf(this.setPriceDialog.getNewPrice()));
        
            if(x==0)
                JOptionPane.showMessageDialog(this, "Error Occurred: Did not change price");
            else
            {
                JOptionPane.showMessageDialog(this, "Successfully change price");
                this.populateJTable();
            }
        }
    }


}//GEN-LAST:event_ChangePriceButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ChangePriceButton;
    private javax.swing.JButton CloseButton;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    private DefaultTableModel model;
    private DBConnection db;
    private setPriceDialog setPriceDialog = new setPriceDialog();
    
    //hash map for saving product 
    private HashMap<Integer, InventoryData> prodMap = new HashMap<Integer, InventoryData>();; 
}
