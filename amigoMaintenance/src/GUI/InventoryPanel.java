/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * InventoryPanel.java
 *
 * Created on Jun 11, 2012, 3:18:20 AM
 */
package GUI;

import MStore.InventoryData;
import MStore.Item;
import MStore.Product;
import java.awt.Rectangle;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import mDB.DBConnection;

/**
 *
 * @author Hanzen
 */
public class InventoryPanel extends javax.swing.JPanel {

    //init InventoryPanel
    public void initInventoryPanel(DBConnection db)
    {
        this.db = db;
    }
    
    //init JTable
    public void initJTableList()
    {
        
         String data[][] = null;
         String col[] = {"Barcode", "Description", "Unit Price", "Stock"};
         model= new DefaultTableModel(data,col)
         {
            @Override
            public boolean isCellEditable(int row, int column) {
                //all cells false
                return false;
            }
        };
         
        this.jTable1.setModel(model);
        
     
    }
    //sets the column width for JTable
    public void setColJTable()
    {
        TableColumn column = null;
        for (int i = 0; i < 4; i++) {
            column = this.jTable1.getColumnModel().getColumn(i);
           if (i == 0) {
                column.setPreferredWidth(80); 
           }
           else if (i==1)
               column.setPreferredWidth(200);
           else if(i==2)
                column.setPreferredWidth(80);  
           else {
                column.setPreferredWidth(110);
            }
        }
    }
    //add row to JTable
    public void addDataJTableList(InventoryData inven)
    {
        
      this.model.insertRow(this.jTable1.getRowCount(),new Object[]{inven.getUPC(), inven.getDescription(), inven.getUnitPrice(), inven.getStock()});
   
      this.model.fireTableDataChanged();
      
      //scrolls the JTable at the bottom
      //source 
      //http://stackoverflow.com/questions/5956603/jtable-autoscrolling-to-bottom-problem
      //Rectangle rect = this.jTable1.getCellRect(this.jTable1.getRowCount(), 0, true);
      //Rectangle r2 = this.jTable1.getVisibleRect();
      
      //this.jTable1.scrollRectToVisible(new Rectangle(rect.x, rect.y, (int) r2.getWidth(), (int) r2.getHeight()));
      
    }
   
    
    //delete row to JTable
    public void removeDataJTableList(int row)
    {
        this.model.removeRow(row);
    }
    
    //populate JTable with data
    public void populateJTable()
    {
       this.initJTableList();
       
       ArrayList<InventoryData> inven = this.db.getInventoryData(); 
        
       //db.getInventoryData() will return null if there are no records
       if(inven !=null)
       {
          Collections.sort(inven, new MyIntComparable());
       
            for(InventoryData i : inven)
          {
           this.model.insertRow(this.jTable1.getRowCount(),  
                   new Object[]{i.getUPC(), i.getDescription(), i.getUnitPrice(), i.getStock()});
          }
       }
       
    }
    
    //returns the UPC number in JTable
    public int getSelectedItem()
    {
        if(this.jTable1.getSelectedRow() != -1)
        {
            //returns the UPC number
            return (Integer)this.jTable1.getValueAt(this.jTable1.getSelectedRow(), 0);
        }
    return -78;
    }
    
    
    /** Creates new form InventoryPanel */
    public InventoryPanel() {
         
        initComponents();
        
        //init JTable
   
        this.initJTableList();
        this.setColJTable();
        
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        CloseButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setBackground(new java.awt.Color(153, 153, 255));

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));

        CloseButton.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        CloseButton.setText("Close");
        CloseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseButtonActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 20)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 204, 255));
        jLabel2.setText("Inventory Viewer");

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(CloseButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 71, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 206, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(588, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                .add(CloseButton)
                .add(jLabel2))
        );

        jTable1.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 832, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(28, 28, 28)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 542, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(39, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

private void CloseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseButtonActionPerformed
// TODO add your handling code here:
    this.setVisible(false);
}//GEN-LAST:event_CloseButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CloseButton;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    private DefaultTableModel model;
    private DBConnection db;
}


class MyIntComparable implements Comparator<InventoryData>{
 
    @Override
    public int compare(InventoryData o1, InventoryData o2) {
       return o1.getDescription().compareTo(o2.getDescription());
    }
}


