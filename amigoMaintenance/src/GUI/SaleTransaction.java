/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SaleTransaction.java
 *
 * Created on Jun 19, 2012, 6:44:35 AM
 */
package GUI;

import java.awt.Rectangle;
import java.sql.Array;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import mDB.DBConnection;
import mDB.SalesData;

/**
 *
 * @author Hanzen
 */
public class SaleTransaction extends javax.swing.JPanel {

    public void initSaleTransaction(DBConnection db)
    {
        this.db = db;
        
        this.dateTxtField.setText(this.getDate());
        
        this.initJTableList();
        this.setColJTable();
    }
     //init JTable
    public void initJTableList()
    {
        
         String data[][] = null;
         String col[] = {"Date", "Time", "Trans No.", "Items Description", "Liters", "Unit Price ", "Total", "Amt Tendered", "Change"};
         model= new DefaultTableModel(data,col)
         {
            @Override
            public boolean isCellEditable(int row, int column) {
                //all cells false
                return false;
            }
        };
         
        this.jTable1.setModel(model);
        this.setColJTable();
        this.jTable1.setRowHeight(20);
        
     
    }
    //sets the column width for JTable
    public void setColJTable()
    {
        TableColumn column = null;
        for (int i = 0; i < 9; i++) {
            column = this.jTable1.getColumnModel().getColumn(i);
           if (i == 0) {
                column.setPreferredWidth(100); 
           }
           else if (i==1)
               column.setPreferredWidth(80);
           else if(i==2)
                column.setPreferredWidth(70); 
           else if(i==3)
                column.setPreferredWidth(130);
           else if(i==4)
                column.setPreferredWidth(130); 
            else if(i==5)
                column.setPreferredWidth(130); 
           else {
                column.setPreferredWidth(80);
            }
        }
    }
    //add row to JTable
    public void addDataJTableList(Date date, String time, int transId, String items, String liters, String price, double total, double amttendered, double change)
    {
        
      this.model.insertRow(this.jTable1.getRowCount(),new Object[]{date, time, transId, items,liters,price,total,amttendered,change});
   
      this.model.fireTableDataChanged();
      
      //scrolls the JTable at the bottom
      //source 
      //http://stackoverflow.com/questions/5956603/jtable-autoscrolling-to-bottom-problem
      Rectangle rect = this.jTable1.getCellRect(this.jTable1.getRowCount(), 0, true);
      Rectangle r2 = this.jTable1.getVisibleRect();
      
      this.jTable1.scrollRectToVisible(new Rectangle(rect.x, rect.y, (int) r2.getWidth(), (int) r2.getHeight()));
      
    }
    
    public String getDate()
    {
           DateFormat dateFormat = new SimpleDateFormat("MM/dd/yyyy");
           Date date = new Date();
           return dateFormat.format(date);
    }
    
   
    /** Creates new form SaleTransaction */
    public SaleTransaction() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        CloseButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        DatePickerButton = new javax.swing.JButton();
        dateTxtField = new javax.swing.JTextField();
        viewSalesBtn = new javax.swing.JButton();
        voidTransBtn = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(255, 102, 51));

        jLabel1.setFont(new java.awt.Font("Plantagenet Cherokee", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 0));
        jLabel1.setText("View Sale Transaction");

        CloseButton.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        CloseButton.setText("Close");
        CloseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseButtonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(5, 5, 5)
                .add(CloseButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 71, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(jLabel1)
                .addContainerGap(733, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 28, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(CloseButton))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7", "Title 8"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        jLabel3.setText("Date:");

        DatePickerButton.setText("Date Picker");
        DatePickerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DatePickerButtonActionPerformed(evt);
            }
        });

        dateTxtField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        dateTxtField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateTxtFieldActionPerformed(evt);
            }
        });

        viewSalesBtn.setText("View Sales Transaction");
        viewSalesBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewSalesBtnActionPerformed(evt);
            }
        });

        voidTransBtn.setText("Void Trans");
        voidTransBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voidTransBtnActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 964, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(20, Short.MAX_VALUE))
                    .add(layout.createSequentialGroup()
                        .add(jLabel3)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(dateTxtField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 121, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(7, 7, 7)
                        .add(DatePickerButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 132, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(viewSalesBtn)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 326, Short.MAX_VALUE)
                        .add(voidTransBtn)
                        .add(46, 46, 46))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 37, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel3)
                    .add(dateTxtField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(DatePickerButton)
                    .add(viewSalesBtn)
                    .add(voidTransBtn))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 509, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

private void DatePickerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DatePickerButtonActionPerformed
// TODO add your handling code here:
    String date=new DatePicker(this).setPickedDate();
    if(!date.equals("none"))
        this.dateTxtField.setText(date);
    
}//GEN-LAST:event_DatePickerButtonActionPerformed

private void dateTxtFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateTxtFieldActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_dateTxtFieldActionPerformed

private void viewSalesBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewSalesBtnActionPerformed
// TODO add your handling code here:

    this.initJTableList();
    String date = this.dateTxtField.getText();
    ArrayList<SalesData> data=this.db.getSalesTrans(date);
    
    if(data==null)
    {
        JOptionPane.showMessageDialog(this, "No Transaction at that day");
        return;
        
    }
     
     String [] items = new String[0];
     Double [] liters = new Double[0];
     Double [] uprice= new Double[0];
 

     for(int i=0; i<data.size(); i++)
     {
        try {
            items=(String[])data.get(i).arrayData.get(0).getArray();
            //liters=(Double[])data.get(i).arrayData.get(1).getArray();
            //uprice=(Double[])data.get(i).arrayData.get(2).getArray();
             
     
        } catch (SQLException ex) {
            Logger.getLogger(SaleTransaction.class.getName()).log(Level.SEVERE, null, ex);
        }
     
       this.addDataJTableList(data.get(i).date, data.get(i).time, data.get(i).transID, data.get(i).arrayData.get(0).toString(), 
               data.get(i).arrayData.get(1).toString(), data.get(i).arrayData.get(2).toString(), data.get(i).total,
                 data.get(i).amttendered, data.get(i).change);
    
     }
  this.db.closeConnection();
    
}//GEN-LAST:event_viewSalesBtnActionPerformed

private void CloseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseButtonActionPerformed
// TODO add your handling code here:
    this.setVisible(false);
}//GEN-LAST:event_CloseButtonActionPerformed

private void voidTransBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voidTransBtnActionPerformed
// TODO add your handling code here:
    
    int column = this.jTable1.getSelectedRow();
    
    if(column!=-1)
    {
       int x= (Integer)this.jTable1.getValueAt(this.jTable1.getSelectedRow(), 2);
    
       int result = this.db.deleteSaleTrans(x);
    
       this.db.closeConnection();
       
       if(result ==1 )
           JOptionPane.showMessageDialog(this, "Successfully deleted transaction");
       else
           JOptionPane.showMessageDialog(this, "Error: Something went wrong");
    
       this.viewSalesBtnActionPerformed(evt);
       
    }
    else 
       JOptionPane.showMessageDialog(this, "Please select an item");
    
    
}//GEN-LAST:event_voidTransBtnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CloseButton;
    private javax.swing.JButton DatePickerButton;
    private javax.swing.JTextField dateTxtField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton viewSalesBtn;
    private javax.swing.JButton voidTransBtn;
    // End of variables declaration//GEN-END:variables

    private DefaultTableModel model;
    private DBConnection db;
}
